---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Accounts"
    description: "Manage Billing Accounts"
    termsOfService: "https://cloud.s3it.uzh.ch/static/custom/UZH-AUP.html"
    contact:
      name: "University of Zurich - S3IT"
    license:
      name: "GPLv3"
  host: "accounting.s3it.uzh.ch"
  basePath: "/api"
  schemes:
    - "http"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /accounts:
      get:
        description: Returns all accounts from the system that the user is associated with
        operationId: api.find_accounts
        parameters:
        - name: admin
          in: query
          description: only return accounts where the user is administrator
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
          format: int32
        produces:
          - "application/json"
        responses:
          "200":
            description: A list of accounts the user is associated with
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Account"
          404:
            description: User does not exist
      put:
        description: Creates a new account, duplicates are not allowed
        operationId: api.add_account
        parameters:
        - name: account
          in: body
          description: Account to add to the store
          required: true
          schema:
            $ref: "#/definitions/NewAccount"
        responses:
          201:
            description: Account response
            schema:
              $ref: "#/definitions/Account"
          401:
            description: Not authorized
          500:
            description: Conflict during create
      post:
        description: Update an existing account
        operationId: api.update_account
        parameters:
        - name: account
          in: body
          description: Account to be updated
          required: true
          schema:
            $ref: "#/definitions/Account"
        responses:
          201:
            description: Account response
            schema:
              $ref: "#/definitions/Account"
          403:
            description: User is not an account administrator
          404:
            description: User or account does not exist
          409:
            description: Conflicting state during update
    /me:
      get:
        description: The User Profile endpoint returns information about the user that has authorized with the application
        operationId: api.get_profile
        responses:
          200:
            description: Profile information for a user
            schema:
              $ref: '#/definitions/User'
          404:
            description: User not found

  definitions:
    Account:
      allOf:
        - $ref: "#/definitions/NewAccount"
        - required:
          - id
        properties:
          id:
            type: integer
            format: int64
    NewAccount:
      type: "object"
      required:
        - "name"
        - "active"
        - "principle_investigator"
        - "faculty"
        - "department"
      properties:
        active:
          type: "boolean"
        name:
          type: "string"
        principleInvestigator:
          type: "string"
        faculty:
          type: "string"
        department:
          type: "string"
    User:
      type: "object"
      required:
        - "id"
        - "ldap_name"
      properties:
        id:
          type: "integer"
          format: "int64"
        ldapName:
          type: "string"
#    resource:
#      type: "object"
#      required:
#        - "id"
#        - "name"
#        - "description"
#      properties:
#        id:
#          type: "integer"
#          format: "int64"
#        name:
#          type: "string"
#        description:
#          type: "string"
